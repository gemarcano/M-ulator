//************************************************************
// Desciption: LRRv2 Register File Header File
//      Generated by genRF (Version 1.42) 10/13/2020 10:47:00
//************************************************************

#ifndef LRRV2_RF_H
#define LRRV2_RF_H

// Register 0x00
typedef union lrrv2_r00{
  struct{
    unsigned ISOLATE_ANALOG		: 1;
    unsigned MUX_DC_CLK		: 1;
    unsigned EN_LDO		: 1;
    unsigned ENABLE_DEBUG_DC_CLK		: 1;
    unsigned ENABLE_DEBUG_VDD_PA		: 1;
    unsigned ENABLE_DEBUG_PA_AMP_OUT		: 1;
    unsigned ENABLE_DC_DC		: 1;
    unsigned DISABLE_DC_DC		: 1;
    unsigned CTRL_PA_STORE		: 1;
    unsigned CTRL_PA_COMP		: 1;
  };
  uint32_t as_int;
} lrrv2_r00_t;
#define LRRv2_R00_DEFAULT {{0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
#define LRRv2_R00_DEFAULT_AS_INT 0x000003
_Static_assert(sizeof(lrrv2_r00_t) == 4, "Punned Structure Size");

// Register 0x01
typedef union lrrv2_r01{
  struct{
    unsigned NOT_DEFINED_1_0		: 1;
    unsigned NOT_DEFINED_1_1		: 1;
    unsigned NOT_DEFINED_1_2		: 1;
    unsigned NOT_DEFINED_1_3		: 1;
    unsigned NOT_DEFINED_1_4		: 1;
    unsigned NOT_DEFINED_1_5		: 1;
    unsigned NOT_DEFINED_1_6		: 1;
    unsigned TUNE_OSC_COMP_I		: 2;
    unsigned TUNE_LDO_R		: 2;
    unsigned TUNE_CSS		: 7;
  };
  uint32_t as_int;
} lrrv2_r01_t;
#define LRRv2_R01_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x7F}}
#define LRRv2_R01_DEFAULT_AS_INT 0x03FC00
_Static_assert(sizeof(lrrv2_r01_t) == 4, "Punned Structure Size");

// Register 0x02
typedef union lrrv2_r02{
  struct{
    unsigned TUNE_VREF_I		: 2;
    unsigned TUNE_VREF		: 6;
    unsigned TUNE_PA_OPAMP_I		: 3;
    unsigned TUNE_PA_OB_RES		: 2;
    unsigned TUNE_PA_AMP_VTUNE		: 5;
    unsigned TUNE_PA_AMP_VIN		: 5;
  };
  uint32_t as_int;
} lrrv2_r02_t;
#define LRRv2_R02_DEFAULT {{0x1, 0x12, 0x5, 0x2, 0x18, 0x14}}
#define LRRv2_R02_DEFAULT_AS_INT 0x531549
_Static_assert(sizeof(lrrv2_r02_t) == 4, "Punned Structure Size");

// Register 0x03
// -- EMPTY --

// Register 0x04
// -- EMPTY --

// Register 0x05
// -- EMPTY --

// Register 0x06
// -- EMPTY --

// Register 0x07
// -- EMPTY --

// Register 0x08
// -- EMPTY --

// Register 0x09
typedef union lrrv2_r09{
  struct{
    unsigned FSM_RESETN		: 1;
    unsigned FSM_ENABLE		: 1;
    unsigned FSM_ISOLATE		: 1;
    unsigned FSM_SLEEP		: 1;
  };
  uint32_t as_int;
} lrrv2_r09_t;
#define LRRv2_R09_DEFAULT {{0x0, 0x0, 0x1, 0x1}}
#define LRRv2_R09_DEFAULT_AS_INT 0x00000C
_Static_assert(sizeof(lrrv2_r09_t) == 4, "Punned Structure Size");

// Register 0x0A
// -- EMPTY --

// Register 0x0B
// -- EMPTY --

// Register 0x0C
// -- EMPTY --

// Register 0x0D
// -- EMPTY --

// Register 0x0E
// -- EMPTY --

// Register 0x0F
// -- EMPTY --

// Register 0x10
typedef union lrrv2_r10{
  struct{
    unsigned TUNE_COARSE2_OSC1		: 8;
    unsigned TUNE_COARSE1_OSC1		: 6;
  };
  uint32_t as_int;
} lrrv2_r10_t;
#define LRRv2_R10_DEFAULT {{0x90, 0x2F}}
#define LRRv2_R10_DEFAULT_AS_INT 0x002F90
_Static_assert(sizeof(lrrv2_r10_t) == 4, "Punned Structure Size");

// Register 0x11
typedef union lrrv2_r11{
  struct{
    unsigned TUNE_FINE3_OSC1		: 5;
    unsigned TUNE_FINE2_OSC1		: 4;
    unsigned TUNE_FINE1_OSC1		: 4;
  };
  uint32_t as_int;
} lrrv2_r11_t;
#define LRRv2_R11_DEFAULT {{0x1F, 0xF, 0xF}}
#define LRRv2_R11_DEFAULT_AS_INT 0x001FFF
_Static_assert(sizeof(lrrv2_r11_t) == 4, "Punned Structure Size");

// Register 0x12
typedef union lrrv2_r12{
  struct{
    unsigned TUNE_COARSE2_OSC2		: 8;
    unsigned TUNE_COARSE1_OSC2		: 6;
  };
  uint32_t as_int;
} lrrv2_r12_t;
#define LRRv2_R12_DEFAULT {{0x90, 0x2F}}
#define LRRv2_R12_DEFAULT_AS_INT 0x002F90
_Static_assert(sizeof(lrrv2_r12_t) == 4, "Punned Structure Size");

// Register 0x13
typedef union lrrv2_r13{
  struct{
    unsigned TUNE_FINE3_OSC2		: 5;
    unsigned TUNE_FINE2_OSC2		: 4;
    unsigned TUNE_FINE1_OSC2		: 4;
  };
  uint32_t as_int;
} lrrv2_r13_t;
#define LRRv2_R13_DEFAULT {{0x1F, 0xF, 0xF}}
#define LRRv2_R13_DEFAULT_AS_INT 0x001FFF
_Static_assert(sizeof(lrrv2_r13_t) == 4, "Punned Structure Size");

// Register 0x14
typedef union lrrv2_r14{
  struct{
    unsigned CAP_SELECTION_OVERRIDE		: 1;
  };
  uint32_t as_int;
} lrrv2_r14_t;
#define LRRv2_R14_DEFAULT {{0x1}}
#define LRRv2_R14_DEFAULT_AS_INT 0x000001
_Static_assert(sizeof(lrrv2_r14_t) == 4, "Punned Structure Size");

// Register 0x15
typedef union lrrv2_r15{
  struct{
    unsigned TUNE_OSC_RES_REGFILE		: 7;
    unsigned TUNE_CUR_WAIT_STABLE		: 7;
    unsigned TUNE_CUR_CNT_TARGET		: 7;
    unsigned TX_FOREVER		: 1;
    unsigned WORKING_ALONE		: 1;
  };
  uint32_t as_int;
} lrrv2_r15_t;
#define LRRv2_R15_DEFAULT {{0x00, 0x05, 0x10, 0x0, 0x0}}
#define LRRv2_R15_DEFAULT_AS_INT 0x040280
_Static_assert(sizeof(lrrv2_r15_t) == 4, "Punned Structure Size");

// Register 0x16
typedef union lrrv2_r16{
  struct{
    unsigned OVERRIDE_TUNE_OSC_RES		: 1;
    unsigned TUNE_CUR_NUM_PRESET		: 3;
    unsigned FLL_STEP_PRESET		: 3;
    unsigned FLL_TUNE_STATE_PRESET		: 3;
    unsigned TUNNING_WORKING		: 1;
    unsigned OVERRIDE_STATE_EN		: 1;
    unsigned OVERRIDE_STATE		: 2;
  };
  uint32_t as_int;
} lrrv2_r16_t;
#define LRRv2_R16_DEFAULT {{0x0, 0x6, 0x7, 0x0, 0x0, 0x0, 0x0}}
#define LRRv2_R16_DEFAULT_AS_INT 0x00007C
_Static_assert(sizeof(lrrv2_r16_t) == 4, "Punned Structure Size");

// Register 0x17
typedef union lrrv2_r17{
  struct{
    unsigned FLL_TARGET		: 20;
  };
  uint32_t as_int;
} lrrv2_r17_t;
#define LRRv2_R17_DEFAULT {{0x10000}}
#define LRRv2_R17_DEFAULT_AS_INT 0x010000
_Static_assert(sizeof(lrrv2_r17_t) == 4, "Punned Structure Size");

// Register 0x18
// -- EMPTY --

// Register 0x19
// -- EMPTY --

// Register 0x1A
// -- EMPTY --

// Register 0x1B
// -- EMPTY --

// Register 0x1C
// -- EMPTY --

// Register 0x1D
// -- EMPTY --

// Register 0x1E
typedef union lrrv2_r1E{
  struct{
    unsigned INT_RPLY_REG_ADDR		: 8;
    unsigned INT_RPLY_SHORT_ADDR		: 8;
  };
  uint32_t as_int;
} lrrv2_r1E_t;
#define LRRv2_R1E_DEFAULT {{0x00, 0x10}}
#define LRRv2_R1E_DEFAULT_AS_INT 0x001000
_Static_assert(sizeof(lrrv2_r1E_t) == 4, "Punned Structure Size");

// Register 0x1F
typedef union lrrv2_r1F{
  struct{
    unsigned INT_PAYLOAD_ADDR		: 8;
    unsigned INT_RPLY_NUM_REGS_1		: 8;
  };
  uint32_t as_int;
} lrrv2_r1F_t;
#define LRRv2_R1F_DEFAULT {{0x3F, 0x00}}
#define LRRv2_R1F_DEFAULT_AS_INT 0x00003F
_Static_assert(sizeof(lrrv2_r1F_t) == 4, "Punned Structure Size");

// Register 0x20
typedef union lrrv2_r20{
  struct{
    unsigned TX_DATA_0		: 16;
  };
  uint32_t as_int;
} lrrv2_r20_t;
#define LRRv2_R20_DEFAULT {{0x0000}}
#define LRRv2_R20_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r20_t) == 4, "Punned Structure Size");

// Register 0x21
typedef union lrrv2_r21{
  struct{
    unsigned TX_DATA_1		: 16;
  };
  uint32_t as_int;
} lrrv2_r21_t;
#define LRRv2_R21_DEFAULT {{0x0000}}
#define LRRv2_R21_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r21_t) == 4, "Punned Structure Size");

// Register 0x22
typedef union lrrv2_r22{
  struct{
    unsigned TX_DATA_2		: 16;
  };
  uint32_t as_int;
} lrrv2_r22_t;
#define LRRv2_R22_DEFAULT {{0x0000}}
#define LRRv2_R22_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r22_t) == 4, "Punned Structure Size");

// Register 0x23
typedef union lrrv2_r23{
  struct{
    unsigned TX_DATA_3		: 16;
  };
  uint32_t as_int;
} lrrv2_r23_t;
#define LRRv2_R23_DEFAULT {{0x0000}}
#define LRRv2_R23_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r23_t) == 4, "Punned Structure Size");

// Register 0x24
typedef union lrrv2_r24{
  struct{
    unsigned TX_DATA_4		: 16;
  };
  uint32_t as_int;
} lrrv2_r24_t;
#define LRRv2_R24_DEFAULT {{0x0000}}
#define LRRv2_R24_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r24_t) == 4, "Punned Structure Size");

// Register 0x25
typedef union lrrv2_r25{
  struct{
    unsigned TX_DATA_5		: 16;
  };
  uint32_t as_int;
} lrrv2_r25_t;
#define LRRv2_R25_DEFAULT {{0x0000}}
#define LRRv2_R25_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r25_t) == 4, "Punned Structure Size");

// Register 0x26
typedef union lrrv2_r26{
  struct{
    unsigned TX_DATA_6		: 16;
  };
  uint32_t as_int;
} lrrv2_r26_t;
#define LRRv2_R26_DEFAULT {{0x0000}}
#define LRRv2_R26_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r26_t) == 4, "Punned Structure Size");

// Register 0x27
typedef union lrrv2_r27{
  struct{
    unsigned TX_DATA_7		: 16;
  };
  uint32_t as_int;
} lrrv2_r27_t;
#define LRRv2_R27_DEFAULT {{0x0000}}
#define LRRv2_R27_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r27_t) == 4, "Punned Structure Size");

// Register 0x28
typedef union lrrv2_r28{
  struct{
    unsigned TX_DATA_8		: 16;
  };
  uint32_t as_int;
} lrrv2_r28_t;
#define LRRv2_R28_DEFAULT {{0x0000}}
#define LRRv2_R28_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r28_t) == 4, "Punned Structure Size");

// Register 0x29
typedef union lrrv2_r29{
  struct{
    unsigned TX_DATA_9		: 16;
  };
  uint32_t as_int;
} lrrv2_r29_t;
#define LRRv2_R29_DEFAULT {{0x0000}}
#define LRRv2_R29_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r29_t) == 4, "Punned Structure Size");

// Register 0x2A
typedef union lrrv2_r2A{
  struct{
    unsigned TX_DATA_10		: 16;
  };
  uint32_t as_int;
} lrrv2_r2A_t;
#define LRRv2_R2A_DEFAULT {{0x0000}}
#define LRRv2_R2A_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r2A_t) == 4, "Punned Structure Size");

// Register 0x2B
typedef union lrrv2_r2B{
  struct{
    unsigned TX_DATA_11		: 16;
  };
  uint32_t as_int;
} lrrv2_r2B_t;
#define LRRv2_R2B_DEFAULT {{0x0000}}
#define LRRv2_R2B_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r2B_t) == 4, "Punned Structure Size");

// Register 0x2C
typedef union lrrv2_r2C{
  struct{
    unsigned TX_DATA_12		: 16;
  };
  uint32_t as_int;
} lrrv2_r2C_t;
#define LRRv2_R2C_DEFAULT {{0x0000}}
#define LRRv2_R2C_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r2C_t) == 4, "Punned Structure Size");

// Register 0x2D
typedef union lrrv2_r2D{
  struct{
    unsigned TX_DATA_13		: 16;
  };
  uint32_t as_int;
} lrrv2_r2D_t;
#define LRRv2_R2D_DEFAULT {{0x0000}}
#define LRRv2_R2D_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r2D_t) == 4, "Punned Structure Size");

// Register 0x2E
typedef union lrrv2_r2E{
  struct{
    unsigned TX_DATA_14		: 16;
  };
  uint32_t as_int;
} lrrv2_r2E_t;
#define LRRv2_R2E_DEFAULT {{0x0000}}
#define LRRv2_R2E_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r2E_t) == 4, "Punned Structure Size");

// Register 0x2F
typedef union lrrv2_r2F{
  struct{
    unsigned TX_DATA_15		: 16;
  };
  uint32_t as_int;
} lrrv2_r2F_t;
#define LRRv2_R2F_DEFAULT {{0x0000}}
#define LRRv2_R2F_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(lrrv2_r2F_t) == 4, "Punned Structure Size");

// Register 0x30
typedef union lrrv2_r30{
  struct{
    unsigned TX_ENABLE		: 1;
    unsigned SELECT_PSK_FSK		: 1;
    unsigned TX_CAP_BANK_CHANGE		: 4;
    unsigned TX_DATA_LEN		: 9;
    unsigned TX_SYMBOL_LEN		: 9;
  };
  uint32_t as_int;
} lrrv2_r30_t;
#define LRRv2_R30_DEFAULT {{0x0, 0x1, 0x1, 0x1FF, 0x020}}
#define LRRv2_R30_DEFAULT_AS_INT 0x107FC6
_Static_assert(sizeof(lrrv2_r30_t) == 4, "Punned Structure Size");

// Register 0x31
// -- EMPTY --

// Register 0x32
// -- EMPTY --

// Register 0x33
// -- EMPTY --

// Register 0x34
// -- EMPTY --

// Register 0x35
// -- EMPTY --

// Register 0x36
// -- EMPTY --

// Register 0x37
// -- EMPTY --

// Register 0x38
// -- EMPTY --

// Register 0x39
// -- EMPTY --

// Register 0x3A
// -- EMPTY --

// Register 0x3B
// -- EMPTY --

// Register 0x3C
// -- EMPTY --

// Register 0x3D
// -- EMPTY --

// Register 0x3E
// -- EMPTY --

// Register 0x3F
// -- READ-ONLY --

// Register 0x40
// -- READ-ONLY --

// Register 0x41
// -- READ-ONLY --

// Register 0x42
// -- READ-ONLY --

// Register 0x43
// -- READ-ONLY --

// Register 0x44
// -- READ-ONLY --

// Register 0x45
// -- READ-ONLY --

// Register 0x46
// -- EMPTY --

// Register 0x47
// -- EMPTY --

// Register 0x48
// -- EMPTY --

// Register 0x49
// -- EMPTY --

// Register 0x4A
// -- EMPTY --

// Register 0x4B
// -- EMPTY --

// Register 0x4C
// -- EMPTY --

// Register 0x4D
// -- EMPTY --

// Register 0x4E
// -- EMPTY --

// Register 0x4F
// -- EMPTY --

// Register 0x50
typedef union lrrv2_r50{
  struct{
    unsigned LC_CLK_RING		: 2;
    unsigned LC_CLK_DIV		: 3;
  };
  uint32_t as_int;
} lrrv2_r50_t;
#define LRRv2_R50_DEFAULT {{0x1, 0x3}}
#define LRRv2_R50_DEFAULT_AS_INT 0x00000D
_Static_assert(sizeof(lrrv2_r50_t) == 4, "Punned Structure Size");

#endif // LRRV2_RF_H