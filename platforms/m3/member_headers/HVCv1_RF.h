//************************************************************
// Desciption: HVCv1 Register File Header File
//      Generated by genRF (Version 1.43) 11/06/2020 15:29:08
//************************************************************

#ifndef HVCV1_RF_H
#define HVCV1_RF_H

// Register 0x00
typedef union hvcv1_r00{
  struct{
    unsigned HVC_RESETN		: 1;
  };
  uint32_t as_int;
} hvcv1_r00_t;
#define HVCv1_R00_DEFAULT {{0x0}}
#define HVCv1_R00_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(hvcv1_r00_t) == 4, "Punned Structure Size");

// Register 0x01
typedef union hvcv1_r01{
  struct{
    unsigned HVC_IB_SEL_EXT		: 1;
    unsigned HVC_IB_2P0_SEL		: 4;
    unsigned HVC_IB_1P2_SEL		: 4;
    unsigned HVC_IB_1P0_SEL		: 4;
  };
  uint32_t as_int;
} hvcv1_r01_t;
#define HVCv1_R01_DEFAULT {{0x0, 0x0, 0x0, 0x0}}
#define HVCv1_R01_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(hvcv1_r01_t) == 4, "Punned Structure Size");

// Register 0x02
typedef union hvcv1_r02{
  struct{
    unsigned HVC_VREF_SEL_EXT		: 1;
    unsigned HVC_VREF_2P0_SEL		: 7;
    unsigned HVC_VREF_1P2_SEL		: 7;
    unsigned HVC_LDO_SEL_EXT		: 1;
  };
  uint32_t as_int;
} hvcv1_r02_t;
#define HVCv1_R02_DEFAULT {{0x0, 0x00, 0x00, 0x0}}
#define HVCv1_R02_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(hvcv1_r02_t) == 4, "Punned Structure Size");

// Register 0x03
typedef union hvcv1_r03{
  struct{
    unsigned HVC_V1P0_EN		: 1;
    unsigned HVC_VDM_SEL		: 7;
    unsigned HVC_VCM_SEL		: 7;
    unsigned HVC_VBN_SEL		: 6;
  };
  uint32_t as_int;
} hvcv1_r03_t;
#define HVCv1_R03_DEFAULT {{0x0, 0x00, 0x00, 0x00}}
#define HVCv1_R03_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(hvcv1_r03_t) == 4, "Punned Structure Size");

// Register 0x04
typedef union hvcv1_r04{
  struct{
    unsigned HVC_CP_RESET_SEL		: 1;
    unsigned HVC_CP_RESET_OVERWRITE		: 1;
    unsigned HVC_CLK_EXT_SEL		: 1;
    unsigned HVC_RIPPLE_REDUCE_EN		: 1;
    unsigned HVC_RIPPLE_REDUCE_SEL		: 4;
    unsigned HVC_CLK_SP_SEL		: 4;
    unsigned HVC_CLK_CPPOS_SEL		: 4;
    unsigned HVC_CLK_CPNEG_SEL		: 4;
  };
  uint32_t as_int;
} hvcv1_r04_t;
#define HVCv1_R04_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
#define HVCv1_R04_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(hvcv1_r04_t) == 4, "Punned Structure Size");

// Register 0x05
typedef union hvcv1_r05{
  struct{
    unsigned HVC_VDDZ_SEL		: 2;
    unsigned HVC_VDDY_SEL		: 2;
    unsigned HVC_VDDX_SEL		: 2;
  };
  uint32_t as_int;
} hvcv1_r05_t;
#define HVCv1_R05_DEFAULT {{0x0, 0x0, 0x0}}
#define HVCv1_R05_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(hvcv1_r05_t) == 4, "Punned Structure Size");

// Register 0x06
typedef union hvcv1_r06{
  struct{
    unsigned HVC_ADC_IB_2P0_SEL		: 4;
    unsigned HVC_ADC_IB_1P2_SEL		: 4;
    unsigned HVC_ADC_IB_1P0_SEL		: 4;
    unsigned HVC_ADC_CLK_SEL		: 1;
    unsigned HVC_ADC_IN_SEL		: 2;
  };
  uint32_t as_int;
} hvcv1_r06_t;
#define HVCv1_R06_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0}}
#define HVCv1_R06_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(hvcv1_r06_t) == 4, "Punned Structure Size");

// Register 0x07
typedef union hvcv1_r07{
  struct{
    unsigned HVC_ADC_LDO_SEL_EXT		: 1;
    unsigned HVC_ADC_LDO_RESETN		: 1;
    unsigned HVC_ADC_VREF_2P0_SEL		: 7;
    unsigned HVC_ADC_VREF_1P2_SEL		: 7;
  };
  uint32_t as_int;
} hvcv1_r07_t;
#define HVCv1_R07_DEFAULT {{0x0, 0x0, 0x00, 0x00}}
#define HVCv1_R07_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(hvcv1_r07_t) == 4, "Punned Structure Size");

// Register 0x08
typedef union hvcv1_r08{
  struct{
    unsigned HVC_SC_DATA_IN		: 1;
    unsigned HVC_SC_LOAD_CHIP		: 1;
    unsigned HVC_SC_LOAD_CHAIN		: 1;
    unsigned HVC_SC_PHI_BAR		: 1;
    unsigned HVC_SC_PHI		: 1;
  };
  uint32_t as_int;
} hvcv1_r08_t;
#define HVCv1_R08_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0}}
#define HVCv1_R08_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(hvcv1_r08_t) == 4, "Punned Structure Size");

// Register 0x09
// -- READ-ONLY --

// Register 0x0A
typedef union hvcv1_r0A{
  struct{
    unsigned HVC_ENB_DWA		: 1;
    unsigned HVC_PURGE_OVERRIDE		: 1;
    unsigned HVC_SEL_ADC_MODE		: 1;
    unsigned HVC_ADC_RESET		: 1;
  };
  uint32_t as_int;
} hvcv1_r0A_t;
#define HVCv1_R0A_DEFAULT {{0x0, 0x0, 0x0, 0x1}}
#define HVCv1_R0A_DEFAULT_AS_INT 0x000008
_Static_assert(sizeof(hvcv1_r0A_t) == 4, "Punned Structure Size");

// Register 0x0B
// -- EMPTY --

// Register 0x0C
// -- EMPTY --

// Register 0x0D
// -- EMPTY --

// Register 0x0E
// -- EMPTY --

// Register 0x0F
// -- READ-ONLY --

// Register 0x10
typedef union hvcv1_r10{
  struct{
    unsigned ADC_READ_TARGET_MBUS_ADDR		: 8;
    unsigned ADC_READ_DEST_MEM_ADDR_UPPER		: 8;
    unsigned ADC_READ_ENABLE		: 1;
  };
  uint32_t as_int;
} hvcv1_r10_t;
#define HVCv1_R10_DEFAULT {{0x14, 0x00, 0x0}}
#define HVCv1_R10_DEFAULT_AS_INT 0x000014
_Static_assert(sizeof(hvcv1_r10_t) == 4, "Punned Structure Size");

// Register 0x11
typedef union hvcv1_r11{
  struct{
    unsigned ADC_READ_DEST_MEM_ADDR		: 24;
  };
  uint32_t as_int;
} hvcv1_r11_t;
#define HVCv1_R11_DEFAULT {{0x000000}}
#define HVCv1_R11_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(hvcv1_r11_t) == 4, "Punned Structure Size");

// Register 0x12
// -- MEMORY-MAPPED --

// Register 0x13
typedef union hvcv1_r13{
  struct{
    unsigned MD_IRQ_PAYLOAD		: 24;
  };
  uint32_t as_int;
} hvcv1_r13_t;
#define HVCv1_R13_DEFAULT {{0x040001}}
#define HVCv1_R13_DEFAULT_AS_INT 0x040001
_Static_assert(sizeof(hvcv1_r13_t) == 4, "Punned Structure Size");

// Register 0x14
typedef union hvcv1_r14{
  struct{
    unsigned MD_IRQ_TARGET_REG_ADDR		: 8;
    unsigned MD_IRQ_TARGET_MBUS_ADDR		: 8;
    unsigned MD_ENABLE		: 1;
  };
  uint32_t as_int;
} hvcv1_r14_t;
#define HVCv1_R14_DEFAULT {{0x00, 0x10, 0x1}}
#define HVCv1_R14_DEFAULT_AS_INT 0x011000
_Static_assert(sizeof(hvcv1_r14_t) == 4, "Punned Structure Size");

// Register 0x15
typedef union hvcv1_r15{
  struct{
    unsigned LC_CLK_RING		: 2;
    unsigned LC_CLK_DIV		: 2;
  };
  uint32_t as_int;
} hvcv1_r15_t;
#define HVCv1_R15_DEFAULT {{0x1, 0x2}}
#define HVCv1_R15_DEFAULT_AS_INT 0x000009
_Static_assert(sizeof(hvcv1_r15_t) == 4, "Punned Structure Size");

// Register 0x16
// -- EMPTY --

// Register 0x17
// -- EMPTY --

// Register 0x18
// -- EMPTY --

// Register 0x19
// -- EMPTY --

// Register 0x1A
// -- EMPTY --

// Register 0x1B
// -- EMPTY --

// Register 0x1C
// -- EMPTY --

// Register 0x1D
// -- EMPTY --

// Register 0x1E
// -- EMPTY --

// Register 0x1F
// -- EMPTY --

// Register 0x20
// -- EMPTY --

// Register 0x21
// -- EMPTY --

// Register 0x22
// -- EMPTY --

// Register 0x23
// -- EMPTY --

// Register 0x24
// -- EMPTY --

// Register 0x25
// -- EMPTY --

// Register 0x26
// -- EMPTY --

// Register 0x27
// -- EMPTY --

// Register 0x28
// -- EMPTY --

// Register 0x29
// -- EMPTY --

// Register 0x2A
// -- EMPTY --

// Register 0x2B
// -- EMPTY --

// Register 0x2C
// -- EMPTY --

// Register 0x2D
typedef union hvcv1_r2D{
  struct{
    unsigned NOT_DEFINED_45_0		: 1;
    unsigned NOT_DEFINED_45_1		: 1;
    unsigned NOT_DEFINED_45_2		: 1;
    unsigned NOT_DEFINED_45_3		: 1;
    unsigned NOT_DEFINED_45_4		: 1;
    unsigned NOT_DEFINED_45_5		: 1;
    unsigned NOT_DEFINED_45_6		: 1;
    unsigned NOT_DEFINED_45_7		: 1;
    unsigned NOT_DEFINED_45_8		: 1;
    unsigned NOT_DEFINED_45_9		: 1;
    unsigned NOT_DEFINED_45_10		: 1;
    unsigned NOT_DEFINED_45_11		: 1;
    unsigned NOT_DEFINED_45_12		: 1;
    unsigned NOT_DEFINED_45_13		: 1;
    unsigned NOT_DEFINED_45_14		: 1;
    unsigned NOT_DEFINED_45_15		: 1;
    unsigned NOT_DEFINED_45_16		: 1;
    unsigned NOT_DEFINED_45_17		: 1;
    unsigned NOT_DEFINED_45_18		: 1;
    unsigned NOT_DEFINED_45_19		: 1;
    unsigned STR_WR_CH0_ALT_ADDR		: 4;
  };
  uint32_t as_int;
} hvcv1_r2D_t;
#define HVCv1_R2D_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xF}}
#define HVCv1_R2D_DEFAULT_AS_INT 0xF00000
_Static_assert(sizeof(hvcv1_r2D_t) == 4, "Punned Structure Size");

// Register 0x2E
// -- EMPTY --

// Register 0x2F
// -- EMPTY --

// Register 0x30
// -- EMPTY --

// Register 0x31
// -- EMPTY --

// Register 0x32
// -- EMPTY --

// Register 0x33
typedef union hvcv1_r33{
  struct{
    unsigned NOT_DEFINED_51_0		: 1;
    unsigned NOT_DEFINED_51_1		: 1;
    unsigned NOT_DEFINED_51_2		: 1;
    unsigned NOT_DEFINED_51_3		: 1;
    unsigned NOT_DEFINED_51_4		: 1;
    unsigned NOT_DEFINED_51_5		: 1;
    unsigned NOT_DEFINED_51_6		: 1;
    unsigned NOT_DEFINED_51_7		: 1;
    unsigned NOT_DEFINED_51_8		: 1;
    unsigned NOT_DEFINED_51_9		: 1;
    unsigned NOT_DEFINED_51_10		: 1;
    unsigned NOT_DEFINED_51_11		: 1;
    unsigned NOT_DEFINED_51_12		: 1;
    unsigned NOT_DEFINED_51_13		: 1;
    unsigned NOT_DEFINED_51_14		: 1;
    unsigned NOT_DEFINED_51_15		: 1;
    unsigned NOT_DEFINED_51_16		: 1;
    unsigned NOT_DEFINED_51_17		: 1;
    unsigned NOT_DEFINED_51_18		: 1;
    unsigned NOT_DEFINED_51_19		: 1;
    unsigned NOT_DEFINED_51_20		: 1;
    unsigned NOT_DEFINED_51_21		: 1;
    unsigned NOT_DEFINED_51_22		: 1;
    unsigned BLK_WR_EN		: 1;
  };
  uint32_t as_int;
} hvcv1_r33_t;
#define HVCv1_R33_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1}}
#define HVCv1_R33_DEFAULT_AS_INT 0x800000
_Static_assert(sizeof(hvcv1_r33_t) == 4, "Punned Structure Size");

// Register 0x34
// -- EMPTY --

// Register 0x35
// -- EMPTY --

// Register 0x36
// -- EMPTY --

// Register 0x37
// -- EMPTY --

// Register 0x38
// -- EMPTY --

// Register 0x39
// -- EMPTY --

// Register 0x3A
// -- EMPTY --

// Register 0x3B
// -- EMPTY --

// Register 0x3C
// -- EMPTY --

// Register 0x3D
// -- EMPTY --

// Register 0x3E
// -- EMPTY --

// Register 0x3F
// -- EMPTY --

// Register 0x40
typedef union hvcv1_r40{
  struct{
    unsigned NOT_DEFINED_64_0		: 1;
    unsigned NOT_DEFINED_64_1		: 1;
    unsigned NOT_DEFINED_64_2		: 1;
    unsigned NOT_DEFINED_64_3		: 1;
    unsigned NOT_DEFINED_64_4		: 1;
    unsigned NOT_DEFINED_64_5		: 1;
    unsigned NOT_DEFINED_64_6		: 1;
    unsigned NOT_DEFINED_64_7		: 1;
    unsigned NOT_DEFINED_64_8		: 1;
    unsigned NOT_DEFINED_64_9		: 1;
    unsigned NOT_DEFINED_64_10		: 1;
    unsigned NOT_DEFINED_64_11		: 1;
    unsigned NOT_DEFINED_64_12		: 1;
    unsigned NOT_DEFINED_64_13		: 1;
    unsigned NOT_DEFINED_64_14		: 1;
    unsigned NOT_DEFINED_64_15		: 1;
    unsigned NOT_DEFINED_64_16		: 1;
    unsigned NOT_DEFINED_64_17		: 1;
    unsigned NOT_DEFINED_64_18		: 1;
    unsigned NOT_DEFINED_64_19		: 1;
    unsigned NOT_DEFINED_64_20		: 1;
    unsigned NOT_DEFINED_64_21		: 1;
    unsigned NOT_DEFINED_64_22		: 1;
    unsigned ACT_RST		: 1;
  };
  uint32_t as_int;
} hvcv1_r40_t;
#define HVCv1_R40_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
#define HVCv1_R40_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(hvcv1_r40_t) == 4, "Punned Structure Size");

#endif // HVCV1_RF_H