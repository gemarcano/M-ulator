//************************************************************
// Desciption: FJPv3 Register File Header File
//      Generated by genRF 10/19/2019 16:41:01
//************************************************************

#ifndef FJPV3_RF_H
#define FJPV3_RF_H

// Register 0x00 [AMBA:0xA0000000]
typedef union fjpv3_r00{
  struct{
    unsigned MBUS_R0		: 24;
  };
  uint32_t as_int;
} fjpv3_r00_t;
#define FJPv3_R00_DEFAULT {{0x000000}}
_Static_assert(sizeof(fjpv3_r00_t) == 4, "Punned Structure Size");

// Register 0x01 [AMBA:0xA0000004]
typedef union fjpv3_r01{
  struct{
    unsigned MBUS_R1		: 24;
  };
  uint32_t as_int;
} fjpv3_r01_t;
#define FJPv3_R01_DEFAULT {{0x000000}}
_Static_assert(sizeof(fjpv3_r01_t) == 4, "Punned Structure Size");

// Register 0x02 [AMBA:0xA0000008]
typedef union fjpv3_r02{
  struct{
    unsigned MBUS_R2		: 24;
  };
  uint32_t as_int;
} fjpv3_r02_t;
#define FJPv3_R02_DEFAULT {{0x000000}}
_Static_assert(sizeof(fjpv3_r02_t) == 4, "Punned Structure Size");

// Register 0x03 [AMBA:0xA000000C]
typedef union fjpv3_r03{
  struct{
    unsigned MBUS_R3		: 24;
  };
  uint32_t as_int;
} fjpv3_r03_t;
#define FJPv3_R03_DEFAULT {{0x000000}}
_Static_assert(sizeof(fjpv3_r03_t) == 4, "Punned Structure Size");

// Register 0x04 [AMBA:0xA0000010]
typedef union fjpv3_r04{
  struct{
    unsigned MBUS_R4		: 24;
  };
  uint32_t as_int;
} fjpv3_r04_t;
#define FJPv3_R04_DEFAULT {{0x000000}}
_Static_assert(sizeof(fjpv3_r04_t) == 4, "Punned Structure Size");

// Register 0x05 [AMBA:0xA0000014]
typedef union fjpv3_r05{
  struct{
    unsigned MBUS_R5		: 24;
  };
  uint32_t as_int;
} fjpv3_r05_t;
#define FJPv3_R05_DEFAULT {{0x000000}}
_Static_assert(sizeof(fjpv3_r05_t) == 4, "Punned Structure Size");

// Register 0x06 [AMBA:0xA0000018]
typedef union fjpv3_r06{
  struct{
    unsigned MBUS_R6		: 24;
  };
  uint32_t as_int;
} fjpv3_r06_t;
#define FJPv3_R06_DEFAULT {{0x000000}}
_Static_assert(sizeof(fjpv3_r06_t) == 4, "Punned Structure Size");

// Register 0x07 [AMBA:0xA000001C]
typedef union fjpv3_r07{
  struct{
    unsigned MBUS_R7		: 24;
  };
  uint32_t as_int;
} fjpv3_r07_t;
#define FJPv3_R07_DEFAULT {{0x000000}}
_Static_assert(sizeof(fjpv3_r07_t) == 4, "Punned Structure Size");

// Register 0x08 [AMBA:0xA0000020]
typedef union fjpv3_r08{
  struct{
    unsigned CHIP_ID		: 16;
  };
  uint32_t as_int;
} fjpv3_r08_t;
#define FJPv3_R08_DEFAULT {{0x0000}}
_Static_assert(sizeof(fjpv3_r08_t) == 4, "Punned Structure Size");

// Register 0x09 [AMBA:0xA0000024]
typedef union fjpv3_r09{
  struct{
    unsigned MBUS_NUM_BITS_THRESHOLD		: 20;
    unsigned NOT_DEFINED_9_20		: 1;
    unsigned NOT_DEFINED_9_21		: 1;
    unsigned NOT_DEFINED_9_22		: 1;
    unsigned MBC_FORCE_IDLE_WHEN_DONE		: 1;
  };
  uint32_t as_int;
} fjpv3_r09_t;
#define FJPv3_R09_DEFAULT {{0x80008, 0x0, 0x0, 0x0, 0x1}}
_Static_assert(sizeof(fjpv3_r09_t) == 4, "Punned Structure Size");

// Register 0x0A [AMBA:0xA0000028]
typedef union fjpv3_r0A{
  struct{
    unsigned FLAGS		: 24;
  };
  uint32_t as_int;
} fjpv3_r0A_t;
#define FJPv3_R0A_DEFAULT {{0x000000}}
_Static_assert(sizeof(fjpv3_r0A_t) == 4, "Punned Structure Size");

// Register 0x0B [AMBA:0xA000002C]
typedef union fjpv3_r0B{
  struct{
    unsigned NOT_DEFINED_11_0		: 1;
    unsigned NOT_DEFINED_11_1		: 1;
    unsigned NOT_DEFINED_11_2		: 1;
    unsigned NOT_DEFINED_11_3		: 1;
    unsigned NOT_DEFINED_11_4		: 1;
    unsigned NOT_DEFINED_11_5		: 1;
    unsigned NOT_DEFINED_11_6		: 1;
    unsigned NOT_DEFINED_11_7		: 1;
    unsigned NOT_DEFINED_11_8		: 1;
    unsigned NOT_DEFINED_11_9		: 1;
    unsigned NOT_DEFINED_11_10		: 1;
    unsigned NOT_DEFINED_11_11		: 1;
    unsigned NOT_DEFINED_11_12		: 1;
    unsigned CLK_GEN_RING		: 2;
    unsigned CLK_GEN_DIV_MBC		: 2;
    unsigned CLK_GEN_DIV_CORE		: 2;
  };
  uint32_t as_int;
} fjpv3_r0B_t;
#define FJPv3_R0B_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x3}}
_Static_assert(sizeof(fjpv3_r0B_t) == 4, "Punned Structure Size");

// Register 0x0C [AMBA:0xA0000030]
// -- EMPTY --

// Register 0x0D [AMBA:0xA0000034]
typedef union fjpv3_r0D{
  struct{
    unsigned SPCH_TUNE_PRECH_DEC_TIME		: 6;
    unsigned SRWL_TUNE_READ_WL_PULSE		: 6;
    unsigned SSAE_TUNE_SA_EN_PULSE		: 6;
    unsigned SWWL_TUNE_WRITE_WL_PULSE		: 6;
  };
  uint32_t as_int;
} fjpv3_r0D_t;
#define FJPv3_R0D_DEFAULT {{0x04, 0x08, 0x04, 0x08}}
_Static_assert(sizeof(fjpv3_r0D_t) == 4, "Punned Structure Size");

// Register 0x0E [AMBA:0xA0000038]
typedef union fjpv3_r0E{
  struct{
    unsigned GOCEP_TIMEOUT		: 24;
  };
  uint32_t as_int;
} fjpv3_r0E_t;
#define FJPv3_R0E_DEFAULT {{0x1E8480}}
_Static_assert(sizeof(fjpv3_r0E_t) == 4, "Punned Structure Size");

// Register 0x0F [AMBA:0xA000003C]
typedef union fjpv3_r0F{
  struct{
    unsigned GOCEP_PASS		: 2;
    unsigned GOCEP_FAIL		: 1;
    unsigned GOCEP_FAIL_CHIP_ID		: 1;
    unsigned GOCEP_FAIL_HEADER_CHECKSUM		: 1;
    unsigned GOCEP_FAIL_MEM_CHECKSUM		: 1;
    unsigned GOCEP_FAIL_TIMEOUT		: 1;
    unsigned GOCEP_CPU_WAS_RUNNING		: 1;
    unsigned NOT_DEFINED_15_8		: 1;
    unsigned NOT_DEFINED_15_9		: 1;
    unsigned NOT_DEFINED_15_10		: 1;
    unsigned NOT_DEFINED_15_11		: 1;
    unsigned NOT_DEFINED_15_12		: 1;
    unsigned NOT_DEFINED_15_13		: 1;
    unsigned NOT_DEFINED_15_14		: 1;
    unsigned NOT_DEFINED_15_15		: 1;
    unsigned NOT_DEFINED_15_16		: 1;
    unsigned NOT_DEFINED_15_17		: 1;
    unsigned NOT_DEFINED_15_18		: 1;
    unsigned NOT_DEFINED_15_19		: 1;
    unsigned NOT_DEFINED_15_20		: 1;
    unsigned NOT_DEFINED_15_21		: 1;
    unsigned NOT_DEFINED_15_22		: 1;
    unsigned GOCEP_FREEZE_RUN_CPU		: 1;
  };
  uint32_t as_int;
} fjpv3_r0F_t;
#define FJPv3_R0F_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(fjpv3_r0F_t) == 4, "Punned Structure Size");

// Register 0x10 [AMBA:0xA0000040]
typedef union fjpv3_r10{
  struct{
    unsigned RUN_CPU		: 1;
  };
  uint32_t as_int;
} fjpv3_r10_t;
#define FJPv3_R10_DEFAULT {{0x1}}
_Static_assert(sizeof(fjpv3_r10_t) == 4, "Punned Structure Size");

// Register 0x11 [AMBA:0xA0000044]
typedef union fjpv3_r11{
  struct{
    unsigned WUP_TSTAMP_SAT		: 15;
    unsigned NOT_DEFINED_17_15		: 1;
    unsigned WUP_IRQ_EN		: 1;
    unsigned WUP_IRQ_IN_SLEEP_ONLY		: 1;
  };
  uint32_t as_int;
} fjpv3_r11_t;
#define FJPv3_R11_DEFAULT {{0x0000, 0x0, 0x0, 0x1}}
_Static_assert(sizeof(fjpv3_r11_t) == 4, "Punned Structure Size");

// Register 0x12 [AMBA:0xA0000048]
// -- READ-ONLY --

// Register 0x13 [AMBA:0xA000004C]
// -- EMPTY --

// Register 0x14 [AMBA:0xA0000050]
// -- EMPTY --

// Register 0x15 [AMBA:0xA0000054]
// -- EMPTY --

// Register 0x16 [AMBA:0xA0000058]
// -- EMPTY --

// Register 0x17 [AMBA:0xA000005C]
// -- EMPTY --

// Register 0x18 [AMBA:0xA0000060]
// -- EMPTY --

// Register 0x19 [AMBA:0xA0000064]
// -- EMPTY --

// Register 0x1A [AMBA:0xA0000068]
typedef union fjpv3_r1A{
  struct{
    unsigned ENABLE_SOFT_RESET		: 1;
  };
  uint32_t as_int;
} fjpv3_r1A_t;
#define FJPv3_R1A_DEFAULT {{0x0}}
_Static_assert(sizeof(fjpv3_r1A_t) == 4, "Punned Structure Size");

// Register 0x1B [AMBA:0xA000006C]
typedef union fjpv3_r1B{
  struct{
    unsigned SEL_VREF_0P6		: 4;
    unsigned SEL_VREF_1P5		: 4;
    unsigned SEL_VREF_VNW		: 4;
    unsigned SEL_VREF_VPW		: 4;
    unsigned SEL_VREF_BN		: 4;
    unsigned SEL_VREF_BP		: 4;
  };
  uint32_t as_int;
} fjpv3_r1B_t;
#define FJPv3_R1B_DEFAULT {{0x9, 0xC, 0x6, 0xA, 0x0, 0xF}}
_Static_assert(sizeof(fjpv3_r1B_t) == 4, "Punned Structure Size");

// Register 0x1C [AMBA:0xA0000070]
// -- EMPTY --

// Register 0x1D [AMBA:0xA0000074]
typedef union fjpv3_r1D{
  struct{
    unsigned DSP_MODE_EN		: 1;
    unsigned WR_CTRL		: 1;
    unsigned TESTOUT_SEL		: 2;
    unsigned CNT_LEN_CP		: 4;
    unsigned CNT_LEN_PMU		: 4;
    unsigned CNT_LEN_WUP		: 4;
    unsigned DEBUG_ST		: 4;
    unsigned SLOCLK_SEL		: 2;
    unsigned NOT_DEFINED_29_22		: 1;
    unsigned VPW_EXT_DN		: 1;
  };
  uint32_t as_int;
} fjpv3_r1D_t;
#define FJPv3_R1D_DEFAULT {{0x0, 0x0, 0x1, 0x2, 0x2, 0x4, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(fjpv3_r1D_t) == 4, "Punned Structure Size");

// Register 0x1E [AMBA:0xA0000078]
// -- READ-ONLY --

// Register 0x1F [AMBA:0xA000007C]
typedef union fjpv3_r1F{
  struct{
    unsigned MBUS_WATCHDOG_THRESHOLD		: 24;
  };
  uint32_t as_int;
} fjpv3_r1F_t;
#define FJPv3_R1F_DEFAULT {{0x16E360}}
_Static_assert(sizeof(fjpv3_r1F_t) == 4, "Punned Structure Size");

// Register 0x20 [AMBA:0xA0000080]
// -- EMPTY --

// Register 0x21 [AMBA:0xA0000084]
// -- EMPTY --

// Register 0x22 [AMBA:0xA0000088]
// -- EMPTY --

// Register 0x23 [AMBA:0xA000008C]
// -- EMPTY --

// Register 0x24 [AMBA:0xA0000090]
// -- EMPTY --

// Register 0x25 [AMBA:0xA0000094]
// -- EMPTY --

// Register 0x26 [AMBA:0xA0000098]
// -- EMPTY --

// Register 0x27 [AMBA:0xA000009C]
// -- EMPTY --

// Register 0x28 [AMBA:0xA00000A0]
// -- EMPTY --

// Register 0x29 [AMBA:0xA00000A4]
typedef union fjpv3_r29{
  struct{
    unsigned STR_WR_CH1_WR_BUF_LOWER		: 16;
    unsigned STR_WR_CH1_ALT_ADDR		: 8;
  };
  uint32_t as_int;
} fjpv3_r29_t;
#define FJPv3_R29_DEFAULT {{0x0000, 0x00}}
_Static_assert(sizeof(fjpv3_r29_t) == 4, "Punned Structure Size");

// Register 0x2A [AMBA:0xA00000A8]
typedef union fjpv3_r2A{
  struct{
    unsigned STR_WR_CH1_WR_BUF_UPPER		: 16;
    unsigned STR_WR_CH1_ALT_REG_WR		: 8;
  };
  uint32_t as_int;
} fjpv3_r2A_t;
#define FJPv3_R2A_DEFAULT {{0x0000, 0x00}}
_Static_assert(sizeof(fjpv3_r2A_t) == 4, "Punned Structure Size");

// Register 0x2B [AMBA:0xA00000AC]
typedef union fjpv3_r2B{
  struct{
    unsigned STR_WR_CH1_BUF_LEN		: 20;
    unsigned NOT_DEFINED_43_20		: 1;
    unsigned STR_WR_CH1_DBLB		: 1;
    unsigned STR_WR_CH1_WRP		: 1;
    unsigned STR_WR_CH1_EN		: 1;
  };
  uint32_t as_int;
} fjpv3_r2B_t;
#define FJPv3_R2B_DEFAULT {{0x00FFF, 0x0, 0x0, 0x0, 0x1}}
_Static_assert(sizeof(fjpv3_r2B_t) == 4, "Punned Structure Size");

// Register 0x2C [AMBA:0xA00000B0]
typedef union fjpv3_r2C{
  struct{
    unsigned STR_WR_CH1_BUF_OFF		: 20;
  };
  uint32_t as_int;
} fjpv3_r2C_t;
#define FJPv3_R2C_DEFAULT {{0x00000}}
_Static_assert(sizeof(fjpv3_r2C_t) == 4, "Punned Structure Size");

// Register 0x2D [AMBA:0xA00000B4]
typedef union fjpv3_r2D{
  struct{
    unsigned STR_WR_CH0_WR_BUF_LOWER		: 16;
    unsigned STR_WR_CH0_ALT_ADDR		: 8;
  };
  uint32_t as_int;
} fjpv3_r2D_t;
#define FJPv3_R2D_DEFAULT {{0x0000, 0x00}}
_Static_assert(sizeof(fjpv3_r2D_t) == 4, "Punned Structure Size");

// Register 0x2E [AMBA:0xA00000B8]
typedef union fjpv3_r2E{
  struct{
    unsigned STR_WR_CH0_WR_BUF_UPPER		: 16;
    unsigned STR_WR_CH0_ALT_REG_WR		: 8;
  };
  uint32_t as_int;
} fjpv3_r2E_t;
#define FJPv3_R2E_DEFAULT {{0x0000, 0x00}}
_Static_assert(sizeof(fjpv3_r2E_t) == 4, "Punned Structure Size");

// Register 0x2F [AMBA:0xA00000BC]
typedef union fjpv3_r2F{
  struct{
    unsigned STR_WR_CH0_BUF_LEN		: 20;
    unsigned NOT_DEFINED_47_20		: 1;
    unsigned STR_WR_CH0_DBLB		: 1;
    unsigned STR_WR_CH0_WRP		: 1;
    unsigned STR_WR_CH0_EN		: 1;
  };
  uint32_t as_int;
} fjpv3_r2F_t;
#define FJPv3_R2F_DEFAULT {{0x00FFF, 0x0, 0x0, 0x0, 0x1}}
_Static_assert(sizeof(fjpv3_r2F_t) == 4, "Punned Structure Size");

// Register 0x30 [AMBA:0xA00000C0]
typedef union fjpv3_r30{
  struct{
    unsigned STR_WR_CH0_BUF_OFF		: 20;
  };
  uint32_t as_int;
} fjpv3_r30_t;
#define FJPv3_R30_DEFAULT {{0x00000}}
_Static_assert(sizeof(fjpv3_r30_t) == 4, "Punned Structure Size");

// Register 0x31 [AMBA:0xA00000C4]
// -- EMPTY --

// Register 0x32 [AMBA:0xA00000C8]
// -- EMPTY --

// Register 0x33 [AMBA:0xA00000CC]
typedef union fjpv3_r33{
  struct{
    unsigned BLK_WR_LENGTH_LIMIT		: 20;
    unsigned NOT_DEFINED_51_20		: 1;
    unsigned NOT_DEFINED_51_21		: 1;
    unsigned BLK_WR_CACT		: 1;
    unsigned BLK_WR_EN		: 1;
  };
  uint32_t as_int;
} fjpv3_r33_t;
#define FJPv3_R33_DEFAULT {{0x00000, 0x0, 0x0, 0x0, 0x1}}
_Static_assert(sizeof(fjpv3_r33_t) == 4, "Punned Structure Size");

// Register 0x34 [AMBA:0xA00000D0]
// -- EMPTY --

// Register 0x35 [AMBA:0xA00000D4]
// -- EMPTY --

// Register 0x36 [AMBA:0xA00000D8]
// -- EMPTY --

// Register 0x37 [AMBA:0xA00000DC]
// -- EMPTY --

// Register 0x38 [AMBA:0xA00000E0]
// -- EMPTY --

// Register 0x39 [AMBA:0xA00000E4]
// -- EMPTY --

// Register 0x3A [AMBA:0xA00000E8]
// -- EMPTY --

// Register 0x3B [AMBA:0xA00000EC]
// -- EMPTY --

// Register 0x3C [AMBA:0xA00000F0]
// -- EMPTY --

// Register 0x3D [AMBA:0xA00000F4]
// -- EMPTY --

// Register 0x3E [AMBA:0xA00000F8]
// -- EMPTY --

// Register 0x3F [AMBA:0xA00000FC]
// -- EMPTY --

// Register 0x40 [AMBA:0xA0000100]
typedef union fjpv3_r40{
  struct{
    unsigned NOT_DEFINED_64_0		: 1;
    unsigned NOT_DEFINED_64_1		: 1;
    unsigned NOT_DEFINED_64_2		: 1;
    unsigned NOT_DEFINED_64_3		: 1;
    unsigned NOT_DEFINED_64_4		: 1;
    unsigned NOT_DEFINED_64_5		: 1;
    unsigned NOT_DEFINED_64_6		: 1;
    unsigned NOT_DEFINED_64_7		: 1;
    unsigned NOT_DEFINED_64_8		: 1;
    unsigned NOT_DEFINED_64_9		: 1;
    unsigned NOT_DEFINED_64_10		: 1;
    unsigned NOT_DEFINED_64_11		: 1;
    unsigned NOT_DEFINED_64_12		: 1;
    unsigned NOT_DEFINED_64_13		: 1;
    unsigned NOT_DEFINED_64_14		: 1;
    unsigned NOT_DEFINED_64_15		: 1;
    unsigned NOT_DEFINED_64_16		: 1;
    unsigned NOT_DEFINED_64_17		: 1;
    unsigned NOT_DEFINED_64_18		: 1;
    unsigned NOT_DEFINED_64_19		: 1;
    unsigned NOT_DEFINED_64_20		: 1;
    unsigned NOT_DEFINED_64_21		: 1;
    unsigned NOT_DEFINED_64_22		: 1;
    unsigned ACT_RST		: 1;
  };
  uint32_t as_int;
} fjpv3_r40_t;
#define FJPv3_R40_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(fjpv3_r40_t) == 4, "Punned Structure Size");

#endif // FJPV3_RF_H